```csharp
using Microsoft.Extensions.DependencyInjection;
using System;
using System.Linq;
using System.Reflection;

public class Program
{
    public static void Main(string[] args)
    {
        var serviceCollection = new ServiceCollection();
        ConfigureServices(serviceCollection);
        using (var serviceProvider = serviceCollection.BuildServiceProvider())
        {
            // Add code here to run the application
        }
    }

    private static void ConfigureServices(IServiceCollection services)
    {
        var assembly = Assembly.GetEntryAssembly();

        var serviceTypes = assembly.GetTypes()
            .Where(type => type.Name.EndsWith("Service") && !type.IsAbstract && !type.IsInterface);

        foreach (var serviceType in serviceTypes)
        {
            services.AddScoped(serviceType);
        }
    }
}
```