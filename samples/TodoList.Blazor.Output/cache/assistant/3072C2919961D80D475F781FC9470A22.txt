// === START FILE: TodoList.Blazor/Components/TodoList/TodoItem.cs
using System;

namespace TodoList.Blazor.Components.TodoList
{
    public class TodoItem
    {
        public string Title { get; set; }
        public bool IsComplete { get; set; }
        public DateTime DueDate { get; set; }
    }
}
// === END FILE: TodoList.Blazor/Components/TodoList/TodoItem.cs

// === START FILE: TodoList.Blazor/Components/TodoList/TodoService.cs
using System;
using System.Collections.Generic;

namespace TodoList.Blazor.Components.TodoList
{
    public class TodoService
    {
        private List<TodoItem> todoItems;

        public TodoService()
        {
            todoItems = new List<TodoItem>
            {
                new TodoItem { Title = "Task 1", IsComplete = false, DueDate = DateTime.Now.AddDays(1) },
                new TodoItem { Title = "Task 2", IsComplete = true, DueDate = DateTime.Now.AddDays(2) },
                new TodoItem { Title = "Task 3", IsComplete = false, DueDate = DateTime.Now.AddDays(3) }
            };
        }

        public List<TodoItem> GetTodoItems()
        {
            return todoItems;
        }
    }
}
// === END FILE: TodoList.Blazor/Components/TodoList/TodoService.cs

// === START FILE: TodoList.Blazor/Components/TodoList/TodoList.razor
@page "/todo"
@using TodoList.Blazor.Components.TodoList
@inject TodoService todoService

<h3>Todo List</h3>

@if (todoItems != null && todoItems.Count > 0)
{
    <ul>
        @foreach (var item in todoItems)
        {
            <li>@item.Title - Due: @item.DueDate.ToShortDateString()</li>
        }
    </ul>
}
else
{
    <p>No items in the todo list.</p>
}

@code {
    List<TodoItem> todoItems;

    protected override void OnInitialized()
    {
        todoItems = todoService.GetTodoItems();
    }
}
// === END FILE: TodoList.Blazor/Components/TodoList/TodoList.razor